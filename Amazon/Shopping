https://leetcode.com/discuss/interview-question/1031663/Amazon-OA/?page=2

A customer wants to buy a pair of jeans, a pair of shoes, a skirt, and a top but has a limited budget in dollars. Given different pricing options for each product, determine how many options our customer has to buy 1 of each product. You cannot spend more money than the budgeted amount.

Example
priceOfJeans = [2, 3]
priceOfShoes = [4]
priceOfSkirts = [2, 3]
priceOfTops = [1, 2]
budgeted = 10

The customer must buy shoes for 4 dollars since there is only one option. This leaves 6 dollars to spend on the other 3 items. Combinations of prices paid for jeans, skirts, and tops respectively that add up to 6 dollars or less are [2, 2, 2], [2, 2, 1], [3, 2, 1], [2, 3, 1]. There are 4 ways the customer can purchase all 4 items.

Function Description

Complete the getNumberOfOptions function in the editor below. The function must return an integer which represents the number of options present to buy the four items.

getNumberOfOptions has 5 parameters:
int[] priceOfJeans: An integer array, which contains the prices of the pairs of jeans available.
int[] priceOfShoes: An integer array, which contains the prices of the pairs of shoes available.
int[] priceOfSkirts: An integer array, which contains the prices of the skirts available.
int[] priceOfTops: An integer array, which contains the prices of the tops available.
int dollars: the total number of dollars available to shop with.

Constraints

1 ≤ a, b, c, d ≤ 103
1 ≤ dollars ≤ 109
1 ≤ price of each item ≤ 109
Note: a, b, c and d are the sizes of the four price arrays


public class shoppingList {
static int count=0;
private static void dfs(List<int []> prices, int r, int pos, int sum){

if(sum > r) return;
if(sum <= r && pos == prices.Count) {
    count++;
    return;
}

foreach (int x in prices[pos])
{
    sum +=x;
    dfs(prices, r, pos+1, sum);
    sum -=x;
}
}

public static void main(String arg[]){
int[] p = new int[]{2,3};
int[] s = new int[]{4};
int[] t = new int[]{2,3};
int[] k = new int[]{1,2};
int rupee = 10;

List<int []> prices= new ArrayList<>();
prices.add(p);
prices.add(s);
prices.add(t);
prices.add(k);
dfs(prices, rupee, 0, 0);
Console.WriteLine(count);
}
}

public static long getNumberOfOptions(List<int> pricesOfJeans, List<int> priceOfShoes, List<int> pricesOfSkirts, List<int> priceOfTops, int dollars)
    {
        long result = 0;
        for (int jeans = 0; jeans < pricesOfJeans.Count; jeans++)
        {
            for (int shoes = 0; shoes < priceOfShoes.Count; shoes++)
            {
                for (int skirt = 0; skirt < pricesOfSkirts.Count; skirt++)
                {
                    for (int top = 0; top < priceOfTops.Count; top++)
                    {
                        if ( pricesOfJeans[jeans] + priceOfShoes[shoes] + pricesOfSkirts[skirt] + priceOfTops[top] <= dollars)
                        {
                            result++;
                        }
                    }
                }
            }
        }
        return result;
    }


using System;
using System.Collections.Generic;
using System.Collections;
class Program
{
    public static long getNumberOfOptions(List<int> pricesOfJeans, List<int> priceOfShoes, List<int> pricesOfSkirts, List<int> priceOfTops, int dollars)
    {
        long result = 0;
        for (int jeans = 0; jeans < pricesOfJeans.Count; jeans++)
        {
            for (int shoes = 0; shoes < priceOfShoes.Count; shoes++)
            {
                for (int skirt = 0; skirt < pricesOfSkirts.Count; skirt++)
                {
                    for (int top = 0; top < priceOfTops.Count; top++)
                    {
                        if ( pricesOfJeans[jeans] + priceOfShoes[shoes] + pricesOfSkirts[skirt] + priceOfTops[top] <= dollars)
                        {
                            result++;
                        }
                    }
                }
            }
        }
        return result;
    }
    static void Main() {
        int x = 10;
        int y = 25;
        int z = x + y;
        List<int> p = new List<int>{2,3};
List<int> s = new List<int>{4};
List<int> t = new List<int>{2,3};
List<int> k = new List<int>{1,2};
int rupee = 10;
/*
List<int []> prices= new ArrayList<>();
prices.add(p);
prices.add(s);
prices.add(t);
prices.add(k);*/

        Console.WriteLine(getNumberOfOptions(p,s,t,k,rupee));
        Console.Write("Sum of x + y = "+ z);
    }
}
