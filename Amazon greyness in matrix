number of 1s in ith row + 
number of 1s in jth column) - 
(number of 0s in ith row + 
number of 0s in jth column)

- Calculated the total number of 1s 
in each row and each column 
(row_1s array and col_1s array) 
using simple prefix array
- number of 0s in a row = m - number of 1s
- let number of 1s in ith row is x and number
 of 1s in jth colum is y 
then number of 0s in ith row = m - x
 and number of 0s in jth column = n - y
- greyness = (x + y) - 
(m - x + n - y) = 2*(x + y) - (m + n)
- used nested for loops to iterate over
 all pixels and checked for the maximum 
greyness overall.

public static int maxGreyness(String[] strArray){
		int[] rowCount = new int[strArray.length];
		int[] colCount = new int[strArray[0].length()];
		int rows = strArray.length;
		int cols = strArray[0].length();
		for(int i=0;i<rows;i++){
			for(int j=0;j<cols;j++) {
				if (strArray[i].charAt(j) == '1') {
					rowCount[i]++;
					colCount[j]++;
				}
			}
		}
		int ans = Integer.MIN_VALUE;
		for(int i=0;i<rows;i++){
			for(int j=0;j<cols;j++){
				ans = Integer.max(ans, 2*(rowCount[i]+colCount[j]) - (rows+cols));
			}
		}
		return ans;		
	}
