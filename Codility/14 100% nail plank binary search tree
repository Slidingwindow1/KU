bool check(int[] A, int[] B, int[] C, int mid)             
{                                                                               
   int M = C.Length;                                                       
  int[] prefix_sums = new int[2 * M + 1];// 0);                                        
  for (int i = 0; i < mid; ++i) ++prefix_sums[C[i]];                            
  for (int i = 1; i < prefix_sums.Length; ++i) prefix_sums[i] += prefix_sums[i - 1];
  for (int i = 0; i < A.Length; ++i) if (prefix_sums[B[i]] == prefix_sums[A[i] - 1]) return false;
  return true;                                                                  
}

int solution(int[] A, int[] B,int [] C)                    
{                                                                               
  int start = 1;                                                                
  int end = C.Length;                                                           
  int min_nails = -1;                                                           
  while (start <= end) {                                                        
    int mid = (start + end) / 2;                                                
    if (check(A, B, C, mid)) { end = mid - 1; min_nails = mid; }                
    else start = mid + 1;                                                       
  }                                                                             
  return min_nails;                                                             
}
