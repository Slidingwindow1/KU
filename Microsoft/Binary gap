

public int solution(int N) {
		bool started = false;
		int length = 0, max = 0;
		for (uint i = 1; i <= N; i <<= 1) {
			if ((i & N) != 0) {
				if (started) {
					if (length > max)
						max = length;
					length = 0;
				}
				started = true;
			}
			else if (started)
				++length;
		}
		return max;
	}

public static int MaxGap(int n)
        {
            int gapMax = 0;
            int zeroCount = 0;
            string nBinary = Convert.ToString(n, 2);
            for (int i = 0; i < nBinary.Length; i++)
            {
                if (nBinary[i] == '0')
                {
                    zeroCount++;
                }
                else
                {
                    if (zeroCount > gapMax)
                    {
                        gapMax = zeroCount;
                    }
                    zeroCount = 0;
                }
            }
            return gapMax;
        }


