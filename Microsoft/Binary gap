
public static int MaxGap(int n)
        {
            int gapMax = 0;
            int zeroCount = 0;
            string nBinary = Convert.ToString(n, 2);
            for (int i = 0; i < nBinary.Length; i++)
            {
                if (nBinary[i] == '0')
                {
                    zeroCount++;
                }
                else
                {
                    if (zeroCount > gapMax)
                    {
                        gapMax = zeroCount;
                    }
                    zeroCount = 0;
                }
            }
            return gapMax;
        }


int pos = -1, prev = -1, longest = 0;
		while(n > 0) {
			pos++;
			if((n & 1) > 0) {
				if(prev != -1)
					longest = Math.Max(longest, pos - prev);

				prev = pos;
			}

			n >>= 1;
		}

		return longest-1;
