public int[][] Merge(int[][] intervals) 
	{        
        List<int[]> lists = intervals.ToList();
        lists = lists.OrderBy(x => x[0]).ToList();

        List<int[]> rets = new List<int[]>();
        while (lists.Count() > 1)
        {
            bool overlap = lists[0][0] <= lists[1][lists[1].Length -1] && lists[1][0] <= lists[0][lists[0].Length - 1];
            if (overlap)
            {
                int[] temp = { lists[0][0], Math.Max(lists[1][lists[1].Length - 1], lists[0][lists[0].Length - 1]) };
                lists.RemoveRange(0, 2);
                lists.Insert(0, temp);
            }
            else
            {
                rets.Add(lists[0]);
                lists.RemoveAt(0);
            }
        }

        rets.Add(lists[0]);
	}

[6,7] [2,4] [5,9]=> [2,4],[5,9]


Input: intervals = [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlap, merge them into [1,6].
