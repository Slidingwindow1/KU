You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.

Return true if you can reach the last index, or false otherwise.

public class Solution {
    char[] isVisited ; // G- Good, B- Bad, U - Unknown 
    public bool CanJump(int[] nums) {
        isVisited = new char[nums.Length]; 
         for (int i = 0; i < isVisited.Length; i++) {
            isVisited[i] = 'U';
        }
        isVisited[isVisited.Length - 1] = 'G';
        return canJumpFromIndex ( 0, nums);
         
         
    }
    private bool canJumpFromIndex(int index , int[] nums)
    {
        
            if(isVisited[index] == 'G') return true; 
            else if(isVisited[index] == 'B') return false; // case when 'B' bad 
        
        int nextJump = Math.Min(nums[index]+ index , nums.Length-1); 
        for(int next = index+1 ; next <= nextJump ; next++  )
        {
            if(canJumpFromIndex(next, nums))
            {
                isVisited[next] = 'G';
                return true;
            }
        }
        isVisited[index] = 'B';
        return false; 
    }
}
