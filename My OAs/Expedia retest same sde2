using System;

class Program{
public static void Main(){

         

        string[] data = {"aceace","ceceaa","abdbdbdbakjkljhkjh"};

        Console.WriteLine(checkComputation(data));

         

        string[] data2 = {"azbde","abcher","acegk"};

        Console.WriteLine(checkComputation(data2));

    int c= thresholdalerts();    
       
    int []arr = {5, 3, 2, 4, 1};

    int n = arr.Length;

    printMinDiffPairs(arr, n);

    }

     

    public static  bool checkComputation(string[] data ){

         

        bool [] isStringEvenArray = new bool[data.Length] ;

        int tempVal;

        bool isEvenPresent = false;

         

        for(int i=0; i<data.Length;i++){

            isEvenPresent= false;

             

            for(int j=0; j<data[i].Length;j++ ){

                tempVal = (int) data[i][j];

                if(tempVal%2==0){

                    isEvenPresent = true;

                }

            }           

            isStringEvenArray[i] = isEvenPresent;           

        }

         

        int oddCount=0;     

        for(int i=0; i<data.Length; i++){            

            if(!isStringEvenArray[i])

                oddCount++;         

        }

         

        if(oddCount%2!=0)return false;
else return true;

    }
    
    static int thresholdalerts()
    {
        int[] nc= new int[]{ 2, 2,2,2,5,5,5,8};
int N=8;
int at=4;
int pm=3;
int[] nnc= new int[N];
int i=0;
while(i<pm)
{
nnc[i]=nc[i];
i++;
}
for(i=pm-1;i<N;++i){
nnc[i]=(nc[i-2]+nc[i-1]+nc[i])/pm;
}
int c=0;
for(i=0; i< N;++i)
{
if( nnc[i]>at)
 c++;
}
Console.WriteLine(c);
return c;
    }
    
    
    static void printMinDiffPairs(int []arr, int n)
{

    if (n <= 1)

    return;

     

    // Sort array elements

    Array.Sort(arr);

     

    // Compare differences of adjacent

    // pairs to find the minimum difference.

    int minDiff = arr[1] - arr[0];

    for (int i = 2; i < n; i++)

    minDiff = Math.Min(minDiff, arr[i] - arr[i-1]);

     

    // Traverse array again and print all pairs

    // with difference as minDiff.

    for ( int i = 1; i < n; i++)

    {

        if ((arr[i] - arr[i-1]) == minDiff)

        {

        Console.Write(" (" + arr[i-1] + ", "

                          + arr[i] + "), " );

        }             

    }
}

     
// Driver code
/*
public static void Main () 
{

    int []arr = {5, 3, 2, 4, 1};

    int n = arr.Length;

    printMinDiffPairs(arr, n);
}*/

}
